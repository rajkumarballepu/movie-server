type Dictionary = Record<string, string>;

type Transformer = (fragments: string[], separator: string) => string;
declare const LOWERCASE_TRANSFORMER: Transformer;
declare const SENTENCECASE_TRANSFORMER: Transformer;
declare const TITLECASE_TRANSFORMER: Transformer;
declare const UPPERCASE_TRANSFORMER: Transformer;

interface ConvertOptions {
    camelCase?: boolean;
    dictionary?: Dictionary;
    separator?: string;
    transformer?: Transformer | null;
}
declare function convert(value: string, { camelCase, dictionary, separator, transformer, }?: ConvertOptions): string;

interface RevertOptions {
    camelCase?: boolean;
    separator?: string | null;
    transformer?: Transformer | null;
}
declare function revert(value: string, { camelCase, separator, transformer, }?: RevertOptions): string;

export { LOWERCASE_TRANSFORMER, SENTENCECASE_TRANSFORMER, TITLECASE_TRANSFORMER, Transformer, UPPERCASE_TRANSFORMER, convert, convert as default, revert };
